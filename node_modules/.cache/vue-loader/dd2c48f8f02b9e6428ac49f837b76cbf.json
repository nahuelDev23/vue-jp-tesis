{"remainingRequest":"C:\\xampp\\htdocs\\tesis2\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\xampp\\htdocs\\tesis2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\tesis2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\tesis2\\src\\views\\Panel.vue?vue&type=template&id=09cda38c&scoped=true&","dependencies":[{"path":"C:\\xampp\\htdocs\\tesis2\\src\\views\\Panel.vue","mtime":1602956668863},{"path":"C:\\xampp\\htdocs\\tesis2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\tesis2\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\tesis2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\tesis2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}